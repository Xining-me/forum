name: Android CI - Enhanced Build Pipeline

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type (debug or release)'
        required: true
        default: 'debug'
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: 18
  ANDROID_API_LEVEL: 33
  BUILD_TOOLS_VERSION: '33.0.2'
  EXPO_VERSION: 51.0.28

jobs:
  quality-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Lint code
        run: |
          if ! npm list eslint >/dev/null 2>&1; then
            npm install eslint --save-dev
          fi
          npx eslint . --ext .js,.jsx

  android-build:
    needs: quality-check
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Expo prebuild (generate native files)
        run: npx expo prebuild --platform android --clean

      - name: Setup Java (Temurin 17)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Configure Android SDK
        run: |
          if [ -d "/usr/local/lib/android/sdk" ]; then
            echo "ANDROID_SDK_ROOT=/usr/local/lib/android/sdk" >> $GITHUB_ENV
          else
            mkdir -p $HOME/android-sdk
            echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
          fi
          
          # Install SDK components
          yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager \
            "platform-tools" \
            "platforms;android-${{ env.ANDROID_API_LEVEL }}" \
            "build-tools;${{ env.BUILD_TOOLS_VERSION }}"

      - name: Prepare JS bundle
        run: |
          mkdir -p android/app/src/main/assets
          npx react-native bundle \
            --platform android \
            --dev ${{ github.event.inputs.build_type == 'debug' }} \
            --entry-file index.js \
            --bundle-output android/app/src/main/assets/index.android.bundle \
            --assets-dest android/app/src/main/res

      - name: Build with Gradle
        working-directory: android
        run: |
          chmod +x gradlew
          if [ "${{ github.event.inputs.build_type }}" = "release" ]; then
            ./gradlew clean assembleRelease --stacktrace --no-daemon
          else
            ./gradlew clean assembleDebug --stacktrace --no-daemon
          fi

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk-${{ github.event.inputs.build_type }}
          path: android/app/build/outputs/apk/**/*.apk
          retention-days: 14
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: android_skeleton/app/build/outputs/apk/**/*.apk
