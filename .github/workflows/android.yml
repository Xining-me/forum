name: Android CI - Gradle build

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'build type (debug or release)'
        required: false
        default: 'debug'
  push:
    branches:
      - main

env:
  NODE_VERSION: 18
  ANDROID_API_LEVEL: 33
  BUILD_TOOLS_VERSION: '33.0.2'

jobs:
  android-build:
    runs-on: ubuntu-latest
    timeout-minutes: 120

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Show repo root & important files (debug)
        run: |
          echo "Workdir: $(pwd)"
          echo "Root listing:"
          ls -la
          echo "android listing (if exists):"
          ls -la android || true
          echo "package.json and lockfile:"
          ls -la package.json package-lock.json package-lock.yaml yarn.lock || true
          node -v || true
          npm -v || true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Ensure npm stable (optional - align CI npm)
        run: |
          echo "npm version before: $(npm -v)"
          # optional: enforce npm@8 if your lockfile was produced by npm@8
          # npm install -g npm@8
          echo "npm version after: $(npm -v)"

      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-cache-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: npm-cache-${{ runner.os }}-

      - name: Install npm dependencies (safe)
        run: |
          echo "Working dir: $(pwd)"
          if [ -f package-lock.json ]; then
            echo "package-lock.json found. try npm ci"
            npm ci || (echo "npm ci failed, fallback to npm install" && npm install)
          else
            echo "package-lock.json not found, running npm install"
            npm install
          fi

      - name: Setup Java (Temurin 11)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Install Android SDK components
        uses: android-actions/setup-android@v2
        with:
          api-level: ${{ env.ANDROID_API_LEVEL }}
          build-tools: ${{ env.BUILD_TOOLS_VERSION }}
          components: "platform-tools,platforms;android-${{ env.ANDROID_API_LEVEL }},build-tools;${{ env.BUILD_TOOLS_VERSION }}"
        # action sets ANDROID_SDK_ROOT

      - name: Accept Android SDK licenses
        env:
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
        run: |
          set -e
          if [ -x "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" ]; then
            yes | "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --licenses || true
          elif [ -x "$ANDROID_SDK_ROOT/tools/bin/sdkmanager" ]; then
            yes | "$ANDROID_SDK_ROOT/tools/bin/sdkmanager" --licenses || true
          else
            echo "sdkmanager not found; continuing"
          fi

      - name: Ensure android/gradlew exists
        run: |
          if [ ! -f android/gradlew ]; then
            echo "ERROR: android/gradlew not found. Please commit gradle wrapper files under android/."
            ls -la android || true
            exit 1
          fi

      - name: Fix gradlew permissions (make executable)
        run: |
          git update-index --chmod=+x android/gradlew || true
          chmod +x android/gradlew || true
          ls -la android/gradlew

      - name: Prepare JS bundle for Android
        run: |
          set -e
          mkdir -p android/app/src/main/assets
          mkdir -p android/app/src/main/res
          # Adjust entry-file if your entry is different from index.js
          if [ -f index.js ]; then
            npx react-native bundle --platform android --dev false --entry-file index.js --bundle-output android/app/src/main/assets/index.android.bundle --assets-dest android/app/src/main/res || true
          else
            echo "index.js not found in repo root. Ensure bundle is present at android/app/src/main/assets/index.android.bundle"
          fi
        env:
          NODE_ENV: production

      - name: Build with Gradle
        working-directory: android
        run: |
          set -e
          echo "Gradle wrapper version:"
          ./gradlew --version || true
          if [ "${{ github.event.inputs.build_type }}" = "release" ]; then
            echo "Building RELEASE (ensure keystore configured)"
            ./gradlew clean assembleRelease --stacktrace --no-daemon
          else
            echo "Building DEBUG"
            ./gradlew clean assembleDebug --stacktrace --no-daemon
          fi

      - name: Show built APKs
        run: |
          echo "Artifacts under android/app/build/outputs/apk/:"
          find android/app/build/outputs/apk -type f -name "*.apk" -print || true

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: android/app/build/outputs/apk/**/*.apk
